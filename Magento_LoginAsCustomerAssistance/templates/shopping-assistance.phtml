<?php
/**
 * ViraXpress - https://www.viraxpress.com
 *
 * LICENSE AGREEMENT
 *
 * This file is part of the ViraXpress package and is licensed under the ViraXpress license agreement.
 * You can view the full license at:
 * https://www.viraxpress.com/license
 *
 * By utilizing this file, you agree to comply with the terms outlined in the ViraXpress license.
 *
 * DISCLAIMER
 *
 * Modifications to this file are discouraged to ensure seamless upgrades and compatibility with future releases.
 *
 * @author      ViraXpress
 * @copyright   Â© 2024 ViraXpress (https://www.viraxpress.com/)
 * @license     https://www.viraxpress.com/license
 */

use Magento\Framework\Escaper;
use Magento\LoginAsCustomerAssistance\Api\IsAssistanceEnabledInterface;
use Magento\LoginAsCustomerAssistance\ViewModel\ShoppingAssistanceViewModel;

/** @var Escaper $escaper */
/** @var ShoppingAssistanceViewModel $viewModel */
$viewModel = $block->getViewModel();
if ($viewModel->isLoginAsCustomerEnabled()): ?>
    <div class="relative" x-data="{isAssistenceTooltipOpen:false}" @keyup.escape="isAssistenceTooltipOpen=false">
        <div class="flex gap-x-3">
            <div class="flex h-6 items-center">
                <input type="checkbox" name="assistance_allowed_checkbox" title="<?= $escaper->escapeHtmlAttr(__($viewModel->getAssistanceCheckboxTitle())) ?>" value="1" id="assistance_allowed_checkbox" <?php if ($viewModel->isAssistanceAllowed()): ?>checked="checked" <?php endif; ?> class="h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary">
            </div>
            <input type="hidden" name="assistance_allowed" value="" />
            <div class="text-sm leading-6 flex justify-start items-start">
                <label for="assistance_allowed_checkbox" class="font-normal cursor-pointer text-gray-900">
                    <?= $escaper->escapeHtmlAttr(__($viewModel->getAssistanceCheckboxTitle())) ?>
                </label>
                <button type="button" @click="isAssistenceTooltipOpen = true" title="Info" aria-labelledby="tooltip-label" tabindex="0" aria-haspopup="true" :aria-expanded="isAssistenceTooltipOpen" role="button" class="ml-2 font-medium text-gray-900">
                    <span id="tooltip-label" class="sr-only"><?= $escaper->escapeHtml(__('Tooltip')) ?></span>
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 5.25h.008v.008H12v-.008Z" />
                    </svg>
                </button>
            </div>
        </div>
        <div :aria-hidden="isAssistenceTooltipOpen === true ? 'false' : 'true'" class="w-full p-4 bg-primary/10 my-2 font-medium text-gray-700" x-cloak x-show="isAssistenceTooltipOpen" @click.outside="isAssistenceTooltipOpen = false">
            <?= $escaper->escapeHtmlAttr(__($viewModel->getAssistanceCheckboxTooltip())) ?>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const allowAccess = "<?= /* @noEscape */ IsAssistanceEnabledInterface::ALLOWED ?>";
            const denyAccess = "<?= /* @noEscape */ IsAssistanceEnabledInterface::DENIED ?>";
            const assistanceAllowedCheckbox = document.querySelector('input[name="assistance_allowed_checkbox"]');
            const assistanceAllowedHiddenField = document.querySelector('input[name="assistance_allowed"]');

            if (assistanceAllowedCheckbox && assistanceAllowedHiddenField) {
                assistanceAllowedCheckbox.addEventListener('click', (event) => {
                    assistanceAllowedHiddenField.value = event.target.checked ? allowAccess : denyAccess;
                });
            }
        });
    </script>
<?php endif ?>