<?php
/**
 * ViraXpress - https://www.viraxpress.com
 *
 * LICENSE AGREEMENT
 *
 * This file is part of the ViraXpress package and is licensed under the ViraXpress license agreement.
 * You can view the full license at:
 * https://www.viraxpress.com/license
 *
 * By utilizing this file, you agree to comply with the terms outlined in the ViraXpress license.
 *
 * DISCLAIMER
 *
 * Modifications to this file are discouraged to ensure seamless upgrades and compatibility with future releases.
 *
 * @author      ViraXpress
 * @copyright   Â© 2024 ViraXpress (https://www.viraxpress.com/)
 * @license     https://www.viraxpress.com/license
 */

// phpcs:disable Magento2.Templates.ThisInTemplate
// phpcs:disable Generic.Files.LineLength

/** @var $block \Magento\Checkout\Block\Cart\Item\Renderer */

$_item = $block->getItem();
$product = $_item->getProduct();
$isVisibleProduct = $product->isVisibleInSiteVisibility();
/** @var \Magento\Msrp\Helper\Data $helper */
$helper = $this->helper(Magento\Msrp\Helper\Data::class);
$canApplyMsrp = $helper->isShowBeforeOrderConfirm($product) && $helper->isMinimalPriceLessMsrp($product);
?>
<?php $hasProductUrl = $escaper->escapeUrl($block->hasProductUrl()); ?>
<?php $productUrl = $escaper->escapeUrl($hasProductUrl) ? $escaper->escapeUrl($block->getProductUrl()) : ''; ?>

<tbody class="cart item">
    <tr class="item-info flex justify-between items-start w-full flex-wrap sm:table-row">
        <td data-th="<?= $escaper->escapeHtml(__('Item')) ?>" class="col item p-2 sm:p-4 w-full sm:w-max before:block before:text-left before:mb-2 before:font-semibold before:content-[attr(data-th)] md:before:content-none md:table-cell">
            <div class="flex justify-start items-start gap-4 sm:flex-col xl:flex-row">
                <?php if ($block->hasProductUrl()): ?>
                    <a href="<?= $escaper->escapeUrl($block->getProductUrl()) ?>" title="<?= $escaper->escapeHtml($block->getProductName()) ?>" tabindex="-1" class="product-item-photo inline-block">
                    <?php else: ?>
                        <span class="product-item-photo inline-block">
                        <?php endif; ?>
                        <?= $block->getImage($block->getProductForThumbnail(), 'cart_page_product_thumbnail')->toHtml() ?>
                        <?php if ($block->hasProductUrl()): ?>
                    </a>
                <?php else: ?>
                    </span>
                <?php endif; ?>
                <div class="product-item-details">
                    <strong class="product-item-name text-base">
                        <?php if ($block->hasProductUrl()): ?>
                            <a href="<?= $escaper->escapeUrl($block->getProductUrl()) ?>"><?= $escaper->escapeHtml($block->getProductName()) ?></a>
                        <?php else: ?>
                            <?= $escaper->escapeHtml($block->getProductName()) ?>
                        <?php endif; ?>
                    </strong>
                    <?php if ($_options = $block->getOptionList()): ?>
                        <dl class="item-options text-sm mt-2">
                            <?php foreach ($_options as $_option): ?>
                                <?php $_formatedOptionValue = $block->getFormatedOptionValue($_option) ?>
                                <dt class="text-gray-600"><?= $escaper->escapeHtml($_option['label']) ?></dt>
                                <dd class="mb-2 mt-1 font-medium">
                                    <?php if (isset($_formatedOptionValue['full_view'])): ?>
                                        <?= $escaper->escapeHtml($_formatedOptionValue['full_view'], ['span', 'a']) ?>
                                    <?php else: ?>
                                        <?= $escaper->escapeHtml($_formatedOptionValue['value'], ['span', 'a']) ?>
                                    <?php endif; ?>
                                </dd>
                            <?php endforeach; ?>
                        </dl>
                    <?php endif; ?>
                    <?php if ($messages = $block->getMessages()): ?>
                        <?php foreach ($messages as $message): ?>
                            <div class="cart item message <?= $escaper->escapeHtmlAttr($message['type']) ?>">
                                <div><?= $escaper->escapeHtml($message['text']) ?></div>
                            </div>
                        <?php endforeach; ?>
                    <?php endif; ?>
                    <?php $addInfoBlock = $block->getProductAdditionalInformationBlock(); ?>
                    <?php if ($addInfoBlock): ?>
                        <?= $addInfoBlock->setItem($_item)->toHtml() ?>
                    <?php endif; ?>
                </div>
            </div>
        </td>
        <?php if ($canApplyMsrp): ?>
            <td class="col msrp p-2 sm:p-4 text-center font-semibold p-2 sm:p-4 align-top before:block before:text-left before:mb-2 before:font-semibold before:content-[attr(data-th)] md:before:content-none md:table-cell" data-th="<?= $escaper->escapeHtml(__('Price')) ?>">
                <span class="pricing msrp">
                    <span class="msrp notice"><?= $escaper->escapeHtml(__('See price before order confirmation.')) ?></span>
                    <?php $helpLinkId = 'cart-msrp-help-' . $_item->getId(); ?>
                    <a href="#" class="action help map" id="<?= ($escaper->escapeHtmlAttr($helpLinkId)) ?>">
                        <span><?= $escaper->escapeHtml(__("What's this?")) ?></span>
                    </a>
                </span>
            </td>
        <?php else: ?>
            <td class="col price text-center font-semibold p-2 sm:p-4 align-top before:block before:text-left before:mb-2 before:font-semibold before:content-[attr(data-th)] md:before:content-none md:table-cell" data-th="<?= $escaper->escapeHtml(__('Price')) ?>">
                <?= $block->getUnitPriceHtml($_item) ?>
            </td>
        <?php endif; ?>
        <td class="col qty p-2 sm:p-4 align-top before:block before:text-center before:mb-2 before:font-semibold before:content-[attr(data-th)] md:before:content-none md:table-cell" data-th="<?= $escaper->escapeHtml(__('Qty')) ?>">
            <div class="field qty">
                <div class="control qty">
                    <label for="cart-<?= $escaper->escapeHtmlAttr($_item->getId()) ?>-qty">
                        <span class="sr-only"><?= $escaper->escapeHtml(__('Qty')) ?></span>
                    </label>
                    <div class="quantity-wrapper flex justify-center items-center space-x-[2px]" x-data="updateQty(<?= $escaper->escapeHtmlAttr($block->getQty()) ?>)" x-init="init()">
                        <button type="button" aria-label="Quantity Decrement" class="text-gray-800 ring-1 ring-inset shadow-sm rounded ring-gray-300 p-2 w-9 h-9 flex justify-center items-center" x-on:click="handleDecrement">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-4 h-4">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M5 12h14"></path>
                            </svg>
                        </button>
                        <input id="cart-<?= $escaper->escapeHtmlAttr($_item->getId()) ?>-qty" name="cart[<?= $escaper->escapeHtmlAttr($_item->getId()) ?>][qty]" data-cart-item-id="<?= $escaper->escapeHtmlAttr($_item->getSku()) ?>" :value="productQty" type="number" min="0" size="4" step="any" title="<?= $escaper->escapeHtmlAttr(__('Qty')) ?>" class="inline-block text-center w-9 h-9 ring-1 ring-inset shadow-sm p-[2px] rounded ring-gray-300 border-0 text-gray-900 sm:text-sm focus:outline-none" data-validate="{required:true,'validate-greater-than-zero':true}" data-item-qty="<?= $escaper->escapeHtmlAttr($block->getQty()) ?>" data-role="cart-item-qty" onchange="validateQuantity(event)" />

                        <button type="button" aria-label="Quantity Increment" class="text-gray-800 ring-1 ring-inset shadow-sm rounded ring-gray-300 p-2 w-9 h-9 flex justify-center items-center" x-on:click="handleIncrement">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-4 h-4">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15"></path>
                            </svg>
                        </button>
                    </div>
                </div>
            </div>
        </td>

        <td class="col subtotal p-2 sm:p-4 text-left font-semibold align-top sm:text-right before:block before:text-left before:mb-2 before:font-semibold before:content-[attr(data-th)] md:before:content-none md:table-cell" data-th="<?= $escaper->escapeHtml(__('Subtotal')) ?>">
            <?php if ($canApplyMsrp): ?>
                <span class="cart msrp subtotal">--</span>
            <?php else: ?>
                <?= $block->getRowTotalHtml($_item) ?>
            <?php endif; ?>
        </td>
    </tr>
    <tr class="item-actions">
        <td colspan="4">
            <div class="actions-toolbar flex justify-end items-start gap-2 mt-5 sm:mt-0 sm:px-4">
                <?= /* @noEscape */ $block->getActions($_item) ?>
            </div>
        </td>
    </tr>
</tbody>


<script>
    function updateQty(qty) {
        return {
            productQty: qty,

            init() {},
            handleDecrement() {
                if (this.productQty <= 1) {
                    this.productQty = 1;
                } else {
                    this.productQty = this.productQty - 1
                }
            },
            handleIncrement() {
                this.productQty = this.productQty + 1
            }
        }
    }

    function handleRedirectToPDP(event) {
        event.preventDefault();

        var hrefValue = event.currentTarget.getAttribute('href');
        window.location.href = hrefValue;
    }

    function validateQuantity(event) {
        var quantity = event.target.value || event.srcElement.value;
        var selectedQtyField = document.getElementById(event.target.id);
        if (isNaN(quantity) || quantity < 1) {
            event.target.value = 1;
        } else {
            var decimalPattern = /^\d*\.?\d*$/;
            if (decimalPattern.test(quantity)) {
                var roundedQuantity = Math.round(parseFloat(quantity));
                event.target.value = roundedQuantity;
            }
        }
    }
</script>